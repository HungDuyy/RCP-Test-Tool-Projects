--- RCPTT testcase ---
Format-Version: 1.0
Contexts: _buzfMLFEEei9kbuBBJwibA,_vfVb4HRmEeiQLabVBmPqjQ,_KTTdEHgqEeiUh7GEerddGQ,_IXScUHgqEeiUh7GEerddGQ,_kRRA8HRmEeiQLabVBmPqjQ,_vW6a8BpbEequd5J9yLLTvQ,_WhrJgHXcEeiSluh8YCOfjA,_hsBGUBpdEequd5J9yLLTvQ,_3GGREBSxEeqwdYZlXbKnSA
Element-Name: BuildTestCCRX
Element-Type: testcase
Element-Version: 3.0
External-Reference: 
Id: _EbKEcLFCEei9kbuBBJwibA
Runtime-Version: 2.4.3.201909171500
Save-Time: 12/17/19 6:14 PM
Testcase-Type: ecl

------=_.content-0a7243a0-75d3-3d5f-9791-539de0e5b7ac
Content-Type: text/ecl
Entry-Name: .content


//global [val outputFolderGCC  [get-data-excel-sheet $BuildTestTargetFile "outputFolderGCC" ]] -override

// input parameters
global	[val BuildTestTargetFile [concat $inputFolder $BuildTestTargetFile]]
		[val includeDirFile [concat $inputFolder $includeDirFile]] 
		[val buildModuleNamesFile [concat $inputFolder $buildModuleNamesFile]]
		[val folderStructureFile [concat $inputFolder $folderStructureFile]]
		[val buildModuleIncludeDirFile [concat $inputFolder $buildModuleIncludeDirFile]]
		[val currentTime [get-time]]
		-override
global 	[val bsp_version 	  [read-excel-file $BuildTestTargetFile "bsp_path" | get-table-cells B1]]
		[val outputFolderCCRX [read-excel-file $BuildTestTargetFile "bsp_path" | get-table-cells B2]]
		-override
// output parameters
//global	[val outputFolder [format $outputFolder [substitute-variables "${system_property:user.home}" | invoke replaceAll "\\\\" "\\/" | invoke replaceAll " " "%20"]]] -override
global	[val summaryReportFile [concat $outputFolderCCRX $summaryReportFile]] -override
read-each-target $BuildTestTargetFile "targetdevice" | each [val target] {
if [ $target | get 0 | eq targetDevice] {
}-else{
	
	get-module-names-with-versions $buildModuleNamesFile | each [val module] {

		global 	[val projectName [create-new-project [$target | get 3] [$target | get 0] [$target | get 2] [$target | get 1] [$module | get 0]]] -override
		wait 2000
		global 	[val summary [format "[%s] [%s]\n\n" [$currentTime | format-time "yyyy-MM-dd HH:mm:ss"] $projectName]] -override
		global	[val projectPath [format "%s.*" $projectName]] -override
		
    	let	[val outputFolder [format "%s%s_%s/" $outputFolderCCRX $projectName [$currentTime | format-time "yyyy-MM-dd-HH-mm-ss"]]] {

			let	[val reportFile [concat $outputFolder $reportFile]]
	    		[val cleanConsoleFile [concat $outputFolder $cleanConsoleFile]]
	   			[val buildConsoleFile [concat $outputFolder $buildConsoleFile]]
	   			[val ErrorWarningLogs [concat $outputFolder $ErrorWarningLogs]]
	   			[val consoleFile [concat $outputFolder $consoleFile]] {

				try {
					if [get-file -uri $outputFolder | get exists] {
						delete-file $outputFolder	
					}
					Remove_BSP $projectName
					Generate_Code $projectName
					display-blocked-FIT
					add-module $projectName "r_bsp" $bsp_version //add BSP with bsp_version
					add-module $projectName  [$module | get 0] [substitute-variables [$module | get 1] | invoke replaceAll "v" ""] //substitute-variables
					Generate_Code $projectName
					check-module-version [$module | get 0] [$module | get 1]
					check-include-dir $buildModuleIncludeDirFile [$module | get 0]
					check-folder-structure $projectName [$module | get 0]
					clean-project $cleanConsoleFile
					build-project $buildConsoleFile $ErrorWarningLogs
					save-and-export
					} -error [val e] -catch {
			 				report-test-error $e
						} -finally {
								report-summary
							}
			}
		}
	}
}
}
